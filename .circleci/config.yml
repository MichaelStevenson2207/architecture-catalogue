version: 2.1

orbs:
  cloudfoundry: circleci/cloudfoundry@0.1.73

commands:
  install_php_extensions_cmd:
    steps:
      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0
      - run: sudo docker-php-ext-install pdo pdo_mysql

  install_laravel_application_cmd:
    steps:
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

  install_node_components_cmd:
    steps:
      - restore_cache:
          keys:
            - node-v1-{{ checksum "package.json" }}
            - node-v1-
      - run: npm install
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}
          paths:
            - node_modules

  test_cmd:
    steps:
      # prepare the database
      - run: touch database/database.sqlite
      - run: php artisan migrate --env=testing --database=sqlite --force

      # run tests with phpunit
      - run: ./vendor/bin/phpunit

  build_cmd:
    steps:
      - checkout
      - install_php_extensions_cmd
      - install_laravel_application_cmd
      - install_node_components_cmd
      - test_cmd

  install_cmd:
    steps:
      - run:
          command: |
            curl -v -L -o cf-cli_amd64.deb 'https://cli.run.pivotal.io/stable?release=debian64&source=github'
            sudo dpkg -i cf-cli_amd64.deb
            cf -v
            cf api https://api.london.cloud.service.gov.uk
            cf auth "$CF_USER" "$CF_PASSWORD"
            cf target -o "$CF_ORG" -s "$CF_SPACE"

  push_cmd:
    steps:
      - run:
          command: |
            # build the application but don't start it
            cf push --no-start

            # CiricleCI environment varialbes
            cf set-env architecture-catalogue CIRCLE_BUILD_NUM ${CIRCLE_BUILD_NUM}
            cf set-env architecture-catalogue CIRCLE_SHA1 $CIRCLE_SHA1
            cf set-env architecture-catalogue CIRCLE_WORKFLOW_ID $CIRCLE_WORKFLOW_ID
            cf set-env architecture-catalogue CIRCLE_PROJECT_USERNAME $CIRCLE_PROJECT_USERNAME
            cf set-env architecture-catalogue CIRCLE_PROJECT_REPONAME $CIRCLE_PROJECT_REPONAME

            # application environment variables
            echo $ADMIN_PASSWORD
            echo ${ADMIN_PASSWORD}
            cf set-env architecture-catalogue ADMIN_PASSWORD ${ADMIN_PASSWORD}
            cf set-env architecture-catalogue ADMIN_USERNAME $ADMIN_USERNAME
            cf set-env architecture-catalogue APP_DEBUG $APP_DEBUG
            cf set-env architecture-catalogue APP_ENV $APP_ENV
            cf set-env architecture-catalogue APP_INSTANCES $APP_INSTANCES
            cf set-env architecture-catalogue APP_KEY $APP_KEY
            cf set-env architecture-catalogue APP_NAME $APP_NAME
            cf set-env architecture-catalogue APP_PAGINATION_MAX_PAGES $APP_PAGINATION_MAX_PAGES
            cf set-env architecture-catalogue APP_PAGINATION_PAGE_SIZE $APP_PAGINATION_PAGE_SIZE
            cf set-env architecture-catalogue APP_PHASE $APP_PHASE
            cf set-env architecture-catalogue APP_URL $APP_URL
            cf set-env architecture-catalogue AZURE_KEY $AZURE_KEY
            cf set-env architecture-catalogue AZURE_REDIRECT_URI $AZURE_REDIRECT_URI
            cf set-env architecture-catalogue AZURE_SECRET $AZURE_SECRET
            cf set-env architecture-catalogue CACHE_DRIVER $CACHE_DRIVER
            cf set-env architecture-catalogue CF_ORG $CF_ORG
            cf set-env architecture-catalogue CF_PASSWORD $CF_PASSWORD
            cf set-env architecture-catalogue CF_SPACE $CF_SPACE
            cf set-env architecture-catalogue CF_USER $CF_USER
            cf set-env architecture-catalogue COGNITO_CLIENT_ID $COGNITO_CLIENT_ID
            cf set-env architecture-catalogue COGNITO_DOMAIN $COGNITO_DOMAIN
            cf set-env architecture-catalogue COGNITO_REDIRECT_URI $COGNITO_REDIRECT_URI
            cf set-env architecture-catalogue DB_CERT_PATH $APP_DB_CERT_PATHENV
            cf set-env architecture-catalogue DB_CONNECTION $DB_CONNECTION
            cf set-env architecture-catalogue GITHUB_CALLBACK_URL $GITHUB_CALLBACK_URL
            cf set-env architecture-catalogue GITHUB_CLIENT_ID $GITHUB_CLIENT_ID
            cf set-env architecture-catalogue GITHUB_CLIENT_SECRET $GITHUB_CLIENT_SECRET
            cf set-env architecture-catalogue GOVUK_NOTIFY_API_KEY $GOVUK_NOTIFY_API_KEY
            cf set-env architecture-catalogue GOVUK_NOTIFY_PASSWORD_RESET_TEMPLATE_ID $GOVUK_NOTIFY_PASSWORD_RESET_TEMPLATE_ID
            cf set-env architecture-catalogue GOVUK_NOTIFY_USER_WELCOM_TEMPLATE_ID $GOVUK_NOTIFY_USER_WELCOM_TEMPLATE_ID
            cf set-env architecture-catalogue GOVUK_NOTIFY_VERIFY_EMAIL_TEMPLATE_ID $GOVUK_NOTIFY_VERIFY_EMAIL_TEMPLATE_ID
            cf set-env architecture-catalogue LOG_CHANNEL $LOG_CHANNEL
            cf set-env architecture-catalogue LOG_SLACK_WEBHOOK_URL $LOG_SLACK_WEBHOOK_URL
            cf set-env architecture-catalogue MAIL_FROM_ADDRESS $MAIL_FROM_ADDRESS
            cf set-env architecture-catalogue MAIL_FROM_NAME $MAIL_FROM_NAME
            cf set-env architecture-catalogue NICS_EA_AUDIT_API $NICS_EA_AUDIT_API
            cf set-env architecture-catalogue NICS_EA_AUDIT_ENABLED $NICS_EA_AUDIT_ENABLED
            cf set-env architecture-catalogue NICS_EA_COGNITO_PASSWORD $NICS_EA_COGNITO_PASSWORD
            cf set-env architecture-catalogue NICS_EA_COGNITO_URL $NICS_EA_COGNITO_URL
            cf set-env architecture-catalogue NICS_EA_COGNITO_USER $NICS_EA_COGNITO_USER
            cf set-env architecture-catalogue NICS_EA_USAGE_TRACKING_ACCOUNT_CREATED_EVENT_ID $NICS_EA_USAGE_TRACKING_ACCOUNT_CREATED_EVENT_ID
            cf set-env architecture-catalogue NICS_EA_USAGE_TRACKING_API $NICS_EA_USAGE_TRACKING_API
            cf set-env architecture-catalogue NICS_EA_USAGE_TRACKING_TENANT_ID $NICS_EA_USAGE_TRACKING_TENANT_ID
            cf set-env architecture-catalogue NICS_EA_USAGE_TRACKING_TENANT_NAME $NICS_EA_USAGE_TRACKING_TENANT_NAME
            cf set-env architecture-catalogue QUEUE_CONNECTION $QUEUE_CONNECTION
            cf set-env architecture-catalogue SESSION_DOMAIN $SESSION_DOMAIN
            cf set-env architecture-catalogue SESSION_DRIVER $SESSION_DRIVER
            cf set-env architecture-catalogue SESSION_LIFETIME $SESSION_LIFETIME
            cf set-env architecture-catalogue SLACK_WEBHOOK_URL $SLACK_WEBHOOK_URL

            # start the application
            cf start architecture-catalogue

executors:
    docker-executor:
      docker:
        - image: circleci/php:7.3-node-browsers
        - image: elastic/elasticsearch:6.5.0

    node-executor:
      docker:
        - image: 'circleci/node:10'

jobs:
  test-with-docker:
    executor: docker-executor
    steps:
      - build_cmd

  deploy-to-govuk:
    executor: node-executor
    steps:
      # get the code - is this really needed?
      # - checkout

      # install the CF CLI
      - install_cmd

      # push the application to GOV.UK PaaS
      - push_cmd

workflows:
  deploy-to-govuk:
    jobs:
      - test-with-docker:
          context: build-test
      - deploy-to-govuk:
          context: govuk-paas-sandbox
          requires:
            - test-with-docker
